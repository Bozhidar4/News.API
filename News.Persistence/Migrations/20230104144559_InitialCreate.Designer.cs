// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using News.Persistence;

#nullable disable

namespace News.Persistence.Migrations
{
    [DbContext(typeof(NewsDBContext))]
    [Migration("20230104144559_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("News.Domain.Articles.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SourceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlToImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("News.Domain.Countries.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "bg",
                            Name = "Bulgaria"
                        },
                        new
                        {
                            Id = 2,
                            Code = "ca",
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 3,
                            Code = "fr",
                            Name = "France"
                        },
                        new
                        {
                            Id = 4,
                            Code = "de",
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 5,
                            Code = "gb",
                            Name = "Great Britain"
                        },
                        new
                        {
                            Id = 6,
                            Code = "gr",
                            Name = "Greece"
                        },
                        new
                        {
                            Id = 7,
                            Code = "it",
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 8,
                            Code = "jp",
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 9,
                            Code = "pl",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 10,
                            Code = "us",
                            Name = "USA"
                        });
                });

            modelBuilder.Entity("News.Domain.Sources.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId")
                        .IsUnique();

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("News.Domain.Sources.Source", b =>
                {
                    b.HasOne("News.Domain.Articles.Article", "Article")
                        .WithOne("Source")
                        .HasForeignKey("News.Domain.Sources.Source", "ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("News.Domain.Articles.Article", b =>
                {
                    b.Navigation("Source")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
